paths:
  /workspaces/{workspaceId}/boards:
    get:
      summary: 보드 목록 조회
      description: 특정 작업공간의 모든 보드 목록을 조회합니다.
      operationId: getBoards
      tags:
        - Board
      security:
        - OperationBased: [read_trello]
      parameters:
        - $ref: '../components/parameters.yaml#/parameters/workspaceIdParam'
      responses:
        '200':
          description: 보드 목록 조회 성공
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '../components/schemas.yaml#/schemas/Board'
        '401':
          $ref: '../components/responses.yaml#/responses/Error401'
        '403':
          $ref: '../components/responses.yaml#/responses/Error403'
        '404':
          $ref: '../components/responses.yaml#/responses/Error404'
    post:
      summary: 보드 생성
      description: 특정 작업공간에 새 보드를 생성합니다.
      operationId: createBoard
      tags:
        - Board
      security:
        - OperationBased: [write_trello]
      parameters:
        - $ref: '../components/parameters.yaml#/parameters/workspaceIdParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
              properties:
                name:
                  type: string
                  description: 보드 이름
                description:
                  type: string
                  description: 보드 설명
                background:
                  type: string
                  description: 보드 배경 색상 또는 이미지 URL
                isPublic:
                  type: boolean
                  description: 공개 여부
      responses:
        '201':
          description: 보드 생성 성공
          content:
            application/json:
              schema:
                $ref: '../components/schemas.yaml#/schemas/Board'
        '400':
          $ref: '../components/responses.yaml#/responses/Error400'
        '401':
          $ref: '../components/responses.yaml#/responses/Error401'
        '403':
          $ref: '../components/responses.yaml#/responses/Error403'
        '404':
          $ref: '../components/responses.yaml#/responses/Error404'
  
  /boards/{boardId}:
    get:
      summary: 보드 상세 조회
      description: 특정 보드의 상세 정보를 조회합니다.
      operationId: getBoard
      tags:
        - Board
      security:
        - OperationBased: [read_trello]
      parameters:
        - $ref: '../components/parameters.yaml#/parameters/boardIdParam'
      responses:
        '200':
          description: 보드 조회 성공
          content:
            application/json:
              schema:
                $ref: '../components/schemas.yaml#/schemas/Board'
        '401':
          $ref: '../components/responses.yaml#/responses/Error401'
        '403':
          $ref: '../components/responses.yaml#/responses/Error403'
        '404':
          $ref: '../components/responses.yaml#/responses/Error404'
    put:
      summary: 보드 수정
      description: 특정 보드의 정보를 수정합니다.
      operationId: updateBoard
      tags:
        - Board
      security:
        - OperationBased: [write_trello]
      parameters:
        - $ref: '../components/parameters.yaml#/parameters/boardIdParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 보드 이름
                description:
                  type: string
                  description: 보드 설명
                background:
                  type: string
                  description: 보드 배경 색상 또는 이미지 URL
                isPublic:
                  type: boolean
                  description: 공개 여부
      responses:
        '200':
          description: 보드 수정 성공
          content:
            application/json:
              schema:
                $ref: '../components/schemas.yaml#/schemas/Board'
        '400':
          $ref: '../components/responses.yaml#/responses/Error400'
        '401':
          $ref: '../components/responses.yaml#/responses/Error401'
        '403':
          $ref: '../components/responses.yaml#/responses/Error403'
        '404':
          $ref: '../components/responses.yaml#/responses/Error404'
    delete:
      summary: 보드 삭제
      description: 특정 보드를 삭제합니다.
      operationId: deleteBoard
      tags:
        - Board
      security:
        - OperationBased: [write_trello]
      parameters:
        - $ref: '../components/parameters.yaml#/parameters/boardIdParam'
      responses:
        '204':
          description: 보드 삭제 성공
        '401':
          $ref: '../components/responses.yaml#/responses/Error401'
        '403':
          $ref: '../components/responses.yaml#/responses/Error403'
        '404':
          $ref: '../components/responses.yaml#/responses/Error404'

  /boards/{boardId}/labels:
    get:
      summary: 라벨 목록 조회
      description: 특정 보드의 모든 라벨 목록을 조회합니다.
      operationId: getLabels
      tags:
        - Label
      security:
        - OperationBased: [read_trello]
      parameters:
        - $ref: '../components/parameters.yaml#/parameters/boardIdParam'
      responses:
        '200':
          description: 라벨 목록 조회 성공
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '../components/schemas.yaml#/schemas/Label'
        '401':
          $ref: '../components/responses.yaml#/responses/Error401'
        '403':
          $ref: '../components/responses.yaml#/responses/Error403'
        '404':
          $ref: '../components/responses.yaml#/responses/Error404'
    post:
      summary: 라벨 생성
      description: 특정 보드에 새 라벨을 생성합니다.
      operationId: createLabel
      tags:
        - Label
      security:
        - OperationBased: [write_trello]
      parameters:
        - $ref: '../components/parameters.yaml#/parameters/boardIdParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - color
              properties:
                name:
                  type: string
                  description: 라벨 이름
                color:
                  type: string
                  description: 라벨 색상 코드
      responses:
        '201':
          description: 라벨 생성 성공
          content:
            application/json:
              schema:
                $ref: '../components/schemas.yaml#/schemas/Label'
        '400':
          $ref: '../components/responses.yaml#/responses/Error400'
        '401':
          $ref: '../components/responses.yaml#/responses/Error401'
        '403':
          $ref: '../components/responses.yaml#/responses/Error403'
        '404':
          $ref: '../components/responses.yaml#/responses/Error404'
                
  /labels/{labelId}:
    put:
      summary: 라벨 수정
      description: 특정 라벨의 정보를 수정합니다.
      operationId: updateLabel
      tags:
        - Label
      security:
        - OperationBased: [write_trello]
      parameters:
        - $ref: '../components/parameters.yaml#/parameters/labelIdParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 라벨 이름
                color:
                  type: string
                  description: 라벨 색상 코드
      responses:
        '200':
          description: 라벨 수정 성공
          content:
            application/json:
              schema:
                $ref: '../components/schemas.yaml#/schemas/Label'
        '400':
          $ref: '../components/responses.yaml#/responses/Error400'
        '401':
          $ref: '../components/responses.yaml#/responses/Error401'
        '403':
          $ref: '../components/responses.yaml#/responses/Error403'
        '404':
          $ref: '../components/responses.yaml#/responses/Error404'
    delete:
      summary: 라벨 삭제
      description: 특정 라벨을 삭제합니다.
      operationId: deleteLabel
      tags:
        - Label
      security:
        - OperationBased: [write_trello]
      parameters:
        - $ref: '../components/parameters.yaml#/parameters/labelIdParam'
      responses:
        '204':
          description: 라벨 삭제 성공
        '401':
          $ref: '../components/responses.yaml#/responses/Error401'
        '403':
          $ref: '../components/responses.yaml#/responses/Error403'
        '404':
          $ref: '../components/responses.yaml#/responses/Error404'