paths:
  /boards/{boardId}/lists:
    get:
      operationId: getLists
      summary: 리스트 목록 조회
      description: 특정 보드의 모든 리스트 목록을 조회합니다.
      tags:
        - List
      security:
        - OperationBased: [read_trello]
      parameters:
        - $ref: '../components/parameters.yaml#/parameters/boardIdParam'
      responses:
        '200':
          description: 리스트 목록 조회 성공
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '../components/schemas.yaml#/schemas/List'
        '401':
          $ref: '../components/responses.yaml#/responses/Error401'
        '403':
          $ref: '../components/responses.yaml#/responses/Error403'
        '404':
          $ref: '../components/responses.yaml#/responses/Error404'
    post:
      operationId: createList
      summary: 리스트 생성
      description: 특정 보드에 새 리스트를 생성합니다.
      tags:
        - List
      security:
        - OperationBased: [write_trello]
      parameters:
        - $ref: '../components/parameters.yaml#/parameters/boardIdParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
              properties:
                name:
                  type: string
                  description: 리스트 이름
                position:
                  type: integer
                  description: 리스트 위치 (기본값은 가장 마지막)
      responses:
        '201':
          description: 리스트 생성 성공
          content:
            application/json:
              schema:
                $ref: '../components/schemas.yaml#/schemas/List'
        '400':
          $ref: '../components/responses.yaml#/responses/Error400'
        '401':
          $ref: '../components/responses.yaml#/responses/Error401'
        '403':
          $ref: '../components/responses.yaml#/responses/Error403'
        '404':
          $ref: '../components/responses.yaml#/responses/Error404'
                
  /lists/{listId}:
    get:
      operationId: getList
      summary: 리스트 상세 조회
      description: 특정 리스트의 상세 정보를 조회합니다.
      tags:
        - List
      security:
        - OperationBased: [read_trello]
      parameters:
        - $ref: '../components/parameters.yaml#/parameters/listIdParam'
      responses:
        '200':
          description: 리스트 조회 성공
          content:
            application/json:
              schema:
                $ref: '../components/schemas.yaml#/schemas/List'
        '401':
          $ref: '../components/responses.yaml#/responses/Error401'
        '403':
          $ref: '../components/responses.yaml#/responses/Error403'
        '404':
          $ref: '../components/responses.yaml#/responses/Error404'
    put:
      operationId: updateList
      summary: 리스트 수정
      description: 특정 리스트의 정보를 수정합니다.
      tags:
        - List
      security:
        - OperationBased: [write_trello]
      parameters:
        - $ref: '../components/parameters.yaml#/parameters/listIdParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 리스트 이름
                position:
                  type: integer
                  description: 리스트 위치
      responses:
        '200':
          description: 리스트 수정 성공
          content:
            application/json:
              schema:
                $ref: '../components/schemas.yaml#/schemas/List'
        '400':
          $ref: '../components/responses.yaml#/responses/Error400'
        '401':
          $ref: '../components/responses.yaml#/responses/Error401'
        '403':
          $ref: '../components/responses.yaml#/responses/Error403'
        '404':
          $ref: '../components/responses.yaml#/responses/Error404'
    delete:
      operationId: deleteList
      summary: 리스트 삭제
      description: 특정 리스트를 삭제합니다.
      tags:
        - List
      security:
        - OperationBased: [write_trello]
      parameters:
        - $ref: '../components/parameters.yaml#/parameters/listIdParam'
      responses:
        '204':
          description: 리스트 삭제 성공
        '401':
          $ref: '../components/responses.yaml#/responses/Error401'
        '403':
          $ref: '../components/responses.yaml#/responses/Error403'
        '404':
          $ref: '../components/responses.yaml#/responses/Error404'
          
  /boards/{boardId}/lists/positions:
    put:
      operationId: updateListPositions
      summary: 리스트 위치 일괄 수정
      description: 특정 보드의 여러 리스트 위치를 한 번에 수정합니다.
      tags:
        - List
      security:
        - OperationBased: [write_trello]
      parameters:
        - $ref: '../components/parameters.yaml#/parameters/boardIdParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - listPositions
              properties:
                listPositions:
                  type: array
                  items:
                    type: object
                    required:
                      - id
                      - position
                    properties:
                      id:
                        type: string
                        format: uuid
                        description: 리스트 ID
                      position:
                        type: integer
                        description: 리스트 새 위치
      responses:
        '200':
          description: 리스트 위치 수정 성공
        '400':
          $ref: '../components/responses.yaml#/responses/Error400'
        '401':
          $ref: '../components/responses.yaml#/responses/Error401'
        '403':
          $ref: '../components/responses.yaml#/responses/Error403'
        '404':
          $ref: '../components/responses.yaml#/responses/Error404'