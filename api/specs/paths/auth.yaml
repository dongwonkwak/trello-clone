paths:
  /oauth2/authorize:
    get:
      summary: OAuth2 인증 요청
      description: 클라이언트가 사용자 인증을 요청합니다.
      operationId: authorize
      tags:
        - Auth
      parameters:
        - name: response_type
          in: query
          required: true
          description: 응답 유형 (code 또는 token)
          schema:
            type: string
            enum: [code, token]
        - name: client_id
          in: query
          required: true
          description: 클라이언트 식별자
          schema:
            type: string
        - name: redirect_uri
          in: query
          required: true
          description: 인증 후 리디렉션할 URI
          schema:
            type: string
            format: uri
        - name: scope
          in: query
          required: false
          description: 요청하는 권한 범위
          schema:
            type: string
        - name: state
          in: query
          required: false
          description: 클라이언트 상태 (CSRF 방지)
          schema:
            type: string
      responses:
        '302':
          description: 인증 코드 또는 토큰과 함께 리디렉션
          headers:
            Location:
              schema:
                type: string
                format: uri
              description: 리디렉션 URL (인증 코드 또는 토큰 포함)
        '400':
          $ref: '../components/responses.yaml#/responses/Error400'
  
  /oauth2/token:
    post:
      summary: 액세스 토큰 발급
      description: 인증 코드를 액세스 토큰으로 교환합니다.
      operationId: token
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                - grant_type
                - client_id
              properties:
                grant_type:
                  type: string
                  enum: [authorization_code, refresh_token, client_credentials]
                  description: 그랜트 타입
                code:
                  type: string
                  description: 인증 코드 (grant_type이 authorization_code인 경우 필수)
                redirect_uri:
                  type: string
                  format: uri
                  description: 리디렉션 URI (인증 코드 발급 시 사용한 값과 동일해야 함)
                client_id:
                  type: string
                  description: 클라이언트 식별자
                client_secret:
                  type: string
                  description: 클라이언트 비밀키
                refresh_token:
                  type: string
                  description: 리프레시 토큰 (grant_type이 refresh_token인 경우 필수)
      responses:
        '200':
          description: 액세스 토큰 발급 성공
          content:
            application/json:
              schema:
                $ref: '../components/schemas.yaml#/schemas/TokenResponse'
        '400':
          $ref: '../components/responses.yaml#/responses/Error400'
        '401':
          $ref: '../components/responses.yaml#/responses/Error401'
                
  /oauth2/refresh:
    post:
      summary: 액세스 토큰 갱신
      description: 리프레시 토큰을 사용해 액세스 토큰을 갱신합니다.
      operationId: refresh
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                - grant_type
                - refresh_token
                - client_id
              properties:
                grant_type:
                  type: string
                  enum: [refresh_token]
                  description: 그랜트 타입 (항상 refresh_token)
                refresh_token:
                  type: string
                  description: 리프레시 토큰
                client_id:
                  type: string
                  description: 클라이언트 식별자
                client_secret:
                  type: string
                  description: 클라이언트 비밀키
      responses:
        '200':
          description: 액세스 토큰 갱신 성공
          content:
            application/json:
              schema:
                $ref: '../components/schemas.yaml#/schemas/TokenResponse'
        '400':
          $ref: '../components/responses.yaml#/responses/Error400'
        '401':
          $ref: '../components/responses.yaml#/responses/Error401'
                
  /oauth2/revoke:
    post:
      summary: 토큰 폐기
      description: 액세스 토큰 또는 리프레시 토큰을 폐기합니다.
      operationId: revoke
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                - token
                - client_id
              properties:
                token:
                  type: string
                  description: 폐기할 토큰
                token_type_hint:
                  type: string
                  enum: [access_token, refresh_token]
                  description: 토큰 타입
                client_id:
                  type: string
                  description: 클라이언트 식별자
                client_secret:
                  type: string
                  description: 클라이언트 비밀키
      responses:
        '200':
          description: 토큰 폐기 성공
        '400':
          $ref: '../components/responses.yaml#/responses/Error400'
        '401':
          $ref: '../components/responses.yaml#/responses/Error401'

  /account/me:
    get:
      summary: 현재 계정 정보 조회
      description: 인증된 계정의 정보를 반환합니다.
      operationId: getMe
      tags:
        - Account
      security:
        - OperationBased: [read_trello]
      responses:
        '200':
          description: 계정 정보 반환 성공
          content:
            application/json:
              schema:
                $ref: '../components/schemas.yaml#/schemas/Account'
        '401':
          $ref: '../components/responses.yaml#/responses/Error401'
    put:
      summary: 계정 정보 수정
      description: 현재 계정의 정보를 수정합니다.
      operationId: updateMe
      tags:
        - Account
      security:
        - OperationBased: [write_trello]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                fullName:
                  type: string
                  description: 이름
                profileImage:
                  type: string
                  format: uri
                  description: 프로필 이미지 URL
      responses:
        '200':
          description: 계정 정보 수정 성공
          content:
            application/json:
              schema:
                $ref: '../components/schemas.yaml#/schemas/Account'
        '400':
          $ref: '../components/responses.yaml#/responses/Error400'
        '401':
          $ref: '../components/responses.yaml#/responses/Error401'
                
  /accounts/{accountId}:
    get:
      summary: 계정 정보 조회
      description: 특정 계정의 정보를 조회합니다.
      operationId: getAccount
      tags:
        - Account
      security:
        - OperationBased: [read_trello]
      parameters:
        - $ref: '../components/parameters.yaml#/parameters/accountIdParam'
      responses:
        '200':
          description: 계정 정보 조회 성공
          content:
            application/json:
              schema:
                $ref: '../components/schemas.yaml#/schemas/Account'
        '401':
          $ref: '../components/responses.yaml#/responses/Error401'
        '404':
          $ref: '../components/responses.yaml#/responses/Error404'

  /auth/signup:
    post:
      summary: 회원 가입
      description: 새로운 계정을 생성합니다.
      operationId: signup
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - email
                - password
              properties:
                username:
                  type: string
                  description: 사용자 아이디
                email:
                  type: string
                  format: email
                  description: 이메일 주소
                password:
                  type: string
                  description: 비밀번호
                fullName:
                  type: string
                  description: 이름
                profileImage:
                  type: string
                  format: uri
                  description: 프로필 이미지 URL
      responses:
        '201':
          description: 회원가입 성공
          content:
            application/json:
              schema:
                $ref: '../components/schemas.yaml#/schemas/Account'
        '400':
          description: 잘못된 요청 또는 이미 존재하는 이메일/사용자명
          content:
            application/json:
              schema:
                $ref: '../components/schemas.yaml#/schemas/ErrorResponse'

  /auth/verify-email:
    post:
      summary: 이메일 인증
      description: 회원가입시 발송된 인증 코드로 이메일을 인증합니다.
      operationId: verifyEmail
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - verificationCode
              properties:
                email:
                  type: string
                  format: email
                  description: 인증할 이메일
                verificationCode:
                  type: string
                  description: 이메일로 전송된 인증 코드
      responses:
        '200':
          description: 이메일 인증 성공
        '400':
          $ref: '../components/responses.yaml#/responses/Error400'
        '404':
          description: 해당 이메일 또는 인증 코드를 찾을 수 없음
          content:
            application/json:
              schema:
                $ref: '../components/schemas.yaml#/schemas/ErrorResponse'

  /auth/forgot-password:
    post:
      summary: 비밀번호 재설정 요청
      description: 비밀번호 재설정 링크를 이메일로 전송합니다.
      operationId: forgotPassword
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
              properties:
                email:
                  type: string
                  format: email
                  description: 비밀번호를 재설정할 계정의 이메일
      responses:
        '200':
          description: 비밀번호 재설정 링크 전송 성공
        '404':
          description: 해당 이메일을 가진 계정을 찾을 수 없음
          content:
            application/json:
              schema:
                $ref: '../components/schemas.yaml#/schemas/ErrorResponse'

  /auth/reset-password:
    post:
      summary: 비밀번호 재설정
      description: 새로운 비밀번호를 설정합니다.
      operationId: resetPassword
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - resetToken
                - newPassword
              properties:
                resetToken:
                  type: string
                  description: 비밀번호 재설정 토큰 (이메일 링크에서 추출)
                newPassword:
                  type: string
                  format: password
                  description: 새로운 비밀번호
      responses:
        '200':
          description: 비밀번호 재설정 성공
        '400':
          $ref: '../components/responses.yaml#/responses/Error400'
        '404':
          description: 유효하지 않거나 만료된 재설정 토큰
          content:
            application/json:
              schema:
                $ref: '../components/schemas.yaml#/schemas/ErrorResponse'